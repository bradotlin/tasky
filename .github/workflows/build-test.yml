name: CI/CD to Kubernetes

on:
  pull_request:      # build image for PRs (source branch â†’ main)
    paths-ignore:
      - '.github/workflows/**'
  push:              # build image for all branch pushes
    branches:
      - '**'         # match every branch
    paths-ignore:
      - '.github/workflows/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          IMAGE_NAME=eyembrad/tasky
          
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            # PR build: tag with PR number + SHA
            IMAGE_TAG=pr-${{ github.event.pull_request.number }}-${{ github.sha }}
          elif [[ "${{ github.ref }}" == refs/heads/main ]]; then
            # Main branch: immutable tag + also push latest
            IMAGE_TAG=main-${{ github.sha }}
            docker build -t $IMAGE_NAME:$IMAGE_TAG .
            docker push $IMAGE_NAME:$IMAGE_TAG
            docker tag $IMAGE_NAME:$IMAGE_TAG $IMAGE_NAME:latest
            docker push $IMAGE_NAME:latest
            exit 0
          else
            # Non-main branch push: tag with branch name + SHA
            BRANCH=$(echo "${GITHUB_REF#refs/heads/}" | tr '/' '-')
            IMAGE_TAG=${BRANCH}-${{ github.sha }}
          fi
          
          echo "Building $IMAGE_NAME:$IMAGE_TAG"
          docker build -t $IMAGE_NAME:$IMAGE_TAG .
          docker push $IMAGE_NAME:$IMAGE_TAG

  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: build
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: latest

      - name: Build kubeconfig
        run: |
          aws eks update-kubeconfig --region us-east-1 --name my-eks-cluster

      - name: Deploy manifests (update image)
        run: |
          IMAGE=eyembrad/tasky:main-${{ github.sha }}
          echo "Deploying $IMAGE"
          kubectl set image deployment/tasky tasky=$IMAGE
          kubectl rollout status deployment/tasky --timeout=120s
